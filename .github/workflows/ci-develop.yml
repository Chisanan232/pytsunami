name: Test by 'develop'
on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop


jobs:

  prep-testbed-unit-test-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash scripts/get-unit-test-core-paths.sh unix)"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}


  unit-test:
    needs: prep-testbed-unit-test-core
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        python-version: [3.6,3.7,3.8,3.9,'3.10']
        os: [ubuntu-18.04,ubuntu-latest, macos-10.15,macos-latest]
        exclude:
          - os: ubuntu-18.04
            python-version: 3.6
          - os: ubuntu-18.04
            python-version: 3.9
          - os: ubuntu-18.04
            python-version: '3.10'
          - os: ubuntu-latest
            python-version: 3.8
          - os: ubuntu-latest
            python-version: 3.9
          - os: macos-10.15
            python-version: 3.6
          - os: macos-10.15
            python-version: 3.8
          - os: macos-latest
            python-version: 3.6
          - os: macos-latest
            python-version: 3.9
        test-path: ${{fromJson(needs.prep-testbed-unit-test-core.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

#      - name: Install dependencies by cloning from GitHub MultiRunnable
#        run: |
#          git clone https://github.com/Chisanan232/multirunnable.git -b master ./multirunnable
#          sudo python ./multirunnable/setup.py install
#          pip install -r ./multirunnable/dev-requirements.txt

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pip
          pip install -U pytest
          pip install -U pytest-cov
          pip install codecov
          pip install pytest-rerunfailures
          pip install aiohttp
          pip install urllib3
          pip install requests
          pip install beautifulsoup4
          pip install mysql-connector-python
          pip install -r requirements.txt

      - name: Run tests with pytest
        run: pytest ${{ matrix.test-path }}
        continue-on-error: true

      - name: Rename the code coverage result file
        run: mv ./.coverage ./.coverage.unit-test-core.${{ matrix.os }}-${{ matrix.python-version }}

      - name: Upload code coverage result file
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.unit-test-core.${{ matrix.os }}-${{ matrix.python-version }}
          if-no-files-found: error


  unit-test-codecov:
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download code coverage result file
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: .coverage.unit-test-core*

      - name: Install Python tool 'coverage'
        run: |
          python -m pip install --upgrade pip
          pip install -U pip
          pip install coverage

      - name: Combine all code coverage result files
        run: coverage combine .coverage.*

      - name: Report testing coverage of project code
        run: coverage report -m

      - name: Generate testing report for Codacy
        run: |
          coverage xml

      - name: Upload testing coverage report
        uses: actions/upload-artifact@v3
        with:
          name: project_coverage_report
          path: coverage.xml
          if-no-files-found: error


  codacy_finish:
    needs: unit-test-codecov
    runs-on: ubuntu-latest
    steps:
      - name: Download testing coverage report
        uses: actions/download-artifact@v3
        with:
          name: project_coverage_report
          path: ./coverage.xml

      - name: Generate testing report for Codacy
        run: mv ./coverage.xml ./cobertura.xml

      - name: Upload testing report to Codacy
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          # or
          # api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: cobertura.xml

